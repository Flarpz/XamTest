<!DOCTYPE html>
<html>
<head>
    <% include ../partials/head %>
</head>
<body>

</body>
<div id="testdiv">
<style>
    canvas {
        border: 1px solid #d3d3d3;
        background-color: #99ffeb;
    }
</style>
</div>

<body onload="startGame()">

<script>

    function startGame() {
        myGameArea.start();
        PlayerOneRed = new component(30, 130, "red", 20, 200);
        PlayerTwoBlue = new component(30, 130, "blue", 940, 200);
        TheBall = new component(20,20, 'black', 480, 230);
        TheBall.riktning = [0,1,0,0]; // vänster, höger, upp, ner
    }

    var myGameArea = {
        canvas : document.createElement("canvas"),
        start : function() {
            this.pressedKeys = [];
            this.canvas.width = 1000;
            this.canvas.height = 500    ;
            this.context = this.canvas.getContext("2d");
            document.body.insertBefore(this.canvas, document.body.childNodes[0]);
            this.interval = setInterval(updateGameArea, 10);
            window.addEventListener('keydown', function (e) {
                //myGameArea.key = e.keyCode;
                //console.log("skriv kod "+ e.keyCode);
                //pressedKeys.push(e.keyCode);
                //console.log(e.keyCode);
                myGameArea.keys = (myGameArea.keys || []);
                myGameArea.keys[e.keyCode] = true;
            })
            /*
            window.addEventListener('keyup', function (e) {
                //myGameArea.key = false;
               //pressedKeys.remove(e.keyCode);
            })*/
            window.addEventListener('keyup', function (e) {
                myGameArea.keys[e.keyCode] = false;
            })
        },

        clear : function() {
            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
        }
    }

    function component(width, height, color, x, y) {
        this.width = width;
        this.height = height;
        this.speedX = 0;
        this.speedY = 0;
        this.x = x;
        this.y = y;
        this.update = function(){
            ctx = myGameArea.context;
            ctx.fillStyle = color;
            ctx.fillRect(this.x, this.y, this.width, this.height);
        }
        this.newPos = function() {
            this.x += this.speedX;
            this.y += this.speedY;
        }
    }

    function ballMotion(){
        TheBall.speedX = 0;
        if(TheBall.riktning[1] == 1){
            TheBall.speedX = 3;
        }
        if(TheBall.riktning[0] == 1){
            TheBall.speedX = -3;
        }
    }

    function collisionTest(rect1,  rect2){
        if (rect1.x < rect2.x + rect2.width &&
                rect1.x + rect1.width > rect2.x &&
                rect1.y < rect2.y + rect2.height &&
                rect1.height + rect1.y > rect2.y){
            if(TheBall.riktning[1] == 1){
                TheBall.riktning[1] = 0;
                TheBall.riktning[0] = 1;
            }
            else{
                console.log('collision');
                TheBall.riktning[0] = 0;
                TheBall.riktning[1] = 1;
            }
        }
    }

    function updateGameArea() {
        myGameArea.clear();
        PlayerOneRed.speedX = 0;
        PlayerOneRed.speedY = 0;
        PlayerTwoBlue.speedY = 0;
        PlayerTwoBlue.speedX = 0;
        /*
        if (myGameArea.key && myGameArea.key == 37) {PlayerOneRed.speedX = -3; }
        if (myGameArea.key && myGameArea.key == 39) {PlayerOneRed.speedX = 3; }
        myGameArea.pressedKeys.forEach(function(x){
            if (x == 38) {PlayerOneRed.speedY = -3; }
            if (x == 40) {PlayerOneRed.speedY = 3; }
            if (x == 87) {PlayerTwoBlue.speedY = -3; }
            if (x == 83) {PlayerTwoBlue.speedY = 3; }
        });
         */

        if (myGameArea.keys && myGameArea.keys[38]) {PlayerTwoBlue.speedY = -3; }
        if (myGameArea.keys && myGameArea.keys[40]) {PlayerTwoBlue.speedY = 3; }
        if (myGameArea.keys && myGameArea.keys[87]) {PlayerOneRed.speedY = -3; }
        if (myGameArea.keys && myGameArea.keys[83]) {PlayerOneRed.speedY = 3; }

        collisionTest(TheBall, PlayerOneRed);
        collisionTest(TheBall, PlayerTwoBlue);
        ballMotion();

        PlayerOneRed.newPos();
        PlayerTwoBlue.newPos();
        TheBall.newPos();
        PlayerOneRed.update();
        PlayerTwoBlue.update();
        TheBall.update();
    }
    /* ladda upp till git dåå
    /*
    function moveup() {
        PlayerOneRed.speedY -= 1;
    }

    function movedown() {
        PlayerOneRed.speedY += 1;
    }

    /*
    function moveleft() {
        PlayerOneRed.speedX -= 1;
    }

    function moveright() {
        PlayerOneRed.speedX += 1;
    }
    */

</script>

</html>